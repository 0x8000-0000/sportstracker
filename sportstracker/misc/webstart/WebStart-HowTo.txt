=============================================================================
===== JAVA WEBSTART INSTALLATION WAS DROPPED WITH SPORTSTRACKER 6.0 !!! =====
=============================================================================

The Java WebStart installation option has been removed, since Java 7u40 there
were security warnings on each ST start due to missing signed certificates.
Free signed certificates are not available for open source projects.

=============================================================================
=============================================================================


How to distribute SportStracker by JavaWebStart
===============================================

1. Build the jars and sign all of them (see below)
2. Upload these files to "http://www.saring.de/sportstracker/webstart"
   (make sure to use the signed Jar files from the "dist" directory):
   - SportsTracker.jar
   - sportstracker.jnlp
   - st-logo-64.png, st-logo-32.png
   - lib/*.jar
3. Create a Install-link (<a href="...>) in the website to the file 
   "webstart/sportstracker.jnlp".
4. Test it :-)


Signing the SportsTracker Jar files
===================================

When JavaWebStart apps need to run out of the sandbox then all jars need to be
signed. Here's how to do it:

First create a kestore with a key alias for this application. The generation 
command is (valid for around 5 years):
  keytool -genkey -keystore ss_keystore -alias sportstracker_key -validity 2000

Key listing command:
  keytool -list -keystore ss_keystore

Everytime the application will be uploaded to the website for WebStart all the
Jar files in the "target" directory must be signed before. This can be done 
easily by using the Ant script build.xml in this directory. You need to run a
successful Maven build ("mvn clean package") before! 

Then you just need to start "ant sign-jars". This script gets the keystore
file and password from the following environment variables, so these need to
be set before the target is invoked:
  KEYSTORE_FILE = filename of the keystore
  KEYSTORE_PASSWORD = password for the specified keystore

The signing could also be done by Maven, but the configuration is much more
complex and it must not be done on every build.

The Jars can also be signed manually by using this command line (must be 
executed for each Jar):
  jarsigner -keystore ss_keystore SportsTracker.jar sportstracker_key  


Stefan Saring
2010/07/11
