SportsTracker-TODO
==================

JavaFX Migration:
- Test menu action for project website on Mac OS X and Linux
- ExerciseViewer: add track point navigation (slider control) and track replay feature
  - test resize, is map size limited before the slider has been added?
  - display tooltip for current position on slider changes?
  - see TODO's in TrackPanelController
  - test on Mac OS X and Linux
  - test proper cleanup, make sure all MapViewer objects are removed by GC (JVisualVM)
  - JavaFX 8u40 is needed here, otherwise there are sometimes drawing problems (black background)
  - trigger I18N updates (also for License info and new Website menu item)
  -> add to documentation, ChangeLog
- ExerciseViewer: Done & tested
  - Bug (also with JavaFX 8u40): EV window is always placed in screen center, not placed at center of parent window
    (initially, when no previous window bounds were persisted)
- JFreeChart usage (in Overview Dialog): migration completed and tested, except:
  - the JavaFX version of JFreeChart logs CSS warnings at initial chart display, but works properly
    (problem does not exist in ExerciseViewer)
    => caused by a JavaFX bug, it has been fixed in 8u40 (tested, see https://javafx-jira.kenai.com/browse/RT-38640 )
  - artifact is not available in the Maven Central repo, using custom build from saring.de repository meanwhile
    -> I've posted a request to the JFree forum: http://www.jfree.org/forum/viewtopic.php?f=3&t=117112
  - installation of custom build in local repository:
    mvn install:install-file -Dfile=jfreechart-1.0.19.jar -DgroupId=org.jfree
      -DartifactId=jfreechart-fx -Dversion=1.0.19 -Dpackaging=jar
- openjfx-dialog status:
  - Works ok, but some minor problems:
    - dialog pane font size is too large (at least on Mac OS X)
      - Workaround: dlg.getDialogPane().setStyle("-fx-font-size: 1em;");
      - I've filed a JavaFX bug: https://javafx-jira.kenai.com/browse/RT-38818 => fixed in JavaFX 8u40
        -> remove in AbstractDialogController and STContextImpl when bugfix is available
    - Alert dialogs must not have fullscreen and minimize window buttons
      - I've filed a JavaFX bug: https://javafx-jira.kenai.com/browse/RT-38946
        => fixed in JavaFX 8u40 (tested on Windows)
    - Alert dialogs does not show the complete message when longer than 2 lines
      - I've filed a JavaFX bug: https://javafx-jira.kenai.com/browse/RT-38998 => fixed in JavaFX 8u40
    - Dialog windows don't display the parent icon or no icons (on Windows)
      - I've filed a JavaFX bug: https://javafx-jira.kenai.com/browse/RT-39878 => fixed in JavaFX 8u40
    - All dialogs are using fullscreen on opening for a very short time (at least on Windows)
      => fixed in JavaFX 8u40
  - remove openjfx-dialog dependency when Java 8u40 has been released
- Use Dialogs, Spinner and FormatedTextFields controls in (e.g. in Exercise, Note, Weight dialogs)
  => will be introduced in Java 8u40 (Dec. 2014)
- JavaFX Bug RT-38644: https://javafx-jira.kenai.com/browse/RT-38644 (created, planned to be fixed in JavaFX 9)
  - User can't close Dialogs with ESC when the DatePicker has the focus fixed in JavaFX 8u40 (at least on Windows)
- JavaFX bug in GridPane layout since JavaFX 8u40 in (now using a workaround, see TODOs in CalendarControlSkin)
  - I've filed a JavaFX bug: https://javafx-jira.kenai.com/browse/RT-40099
- Print Views: Done for all views
  - Problem in List Views: tables can't be printed completely, the JavaFX API support only the printing
    of one single node at one single page
  - Used workaround: create a snapshot image of the current displayed table view, scale to fit on paper
    and print the image instead the view (prints only the visible rows)
  - Update ViewPrinter when JavaFX API supports the printing of the complete tables
    (the I18N properties for list printing on multiple pages are present, see st.???view.print.???)
- Linux test (Ubuntu 14.04 x64, Java 8u31, VirtualBox):
  - SportsTracker and ExerciseViewer are running fine (Look&Feel, printing, HRM file Drag&Drop)
  - drawing problems in all JFreeChart diagrams => JavaFX bug, fixed in JavaFX 8u40 (tested)
  - Application icon can't be set in code, must be defined in the .desktop launcher file
    (see example in misc/linux-launcher/SportsTracker.desktop)
- Exercise Viewer: use a JavaFX-based map viewer, currently it's the Swing-based JXMapViewer
  - tested various JavaFX based components, none of them is stable and provides all features
  - the integration of the Swing-based viewer works fine, there's no need to replace it instantly

JavaFX Migration status:
- SportsTracker: completed
- Exercise Viewer: completed (map viewer is still Swing based)

Java 8 migration status:
- full use of Lambdas and the new Java Date API (JSR 310) in all modules
- the Parser implementations of the ExerciseViewer has not been updated for
  using the latest Java 8 features 
  => they are isolated and not the base for further development
- IDE support: works fine in IDEA 13.1, NetBeans 8.0 and Eclipse 4.4

Dependency Injection:
- use Dagger as an alternative to the Guice framework,
  URL: http://square.github.io/dagger/
  -> almost same interface (JSR 330), but DI done on compilation without 
     reflection instead at runtime 
  -> much faster startup performance
  -> see Devoxx 2013 talk about Dagger from Jake Wharton
- Alternative: Guice 4.0

Mac OS X integration:
- Application name is not displayed in the MenuBar, it shows STMain instead
  => Workaround: pass JVM parameter "-Xdock:name=SportsTracker" on startup
  => Known bug, maybe it will be fixed in next JDK release
- SportsTracker.app and native packages work properly, the name and icons are
  set via JVM parameter there

General TODOs:
--------------

- Use JPA for database persistence instead of XML files
  - Derby or SQLite are interesting options, SQLite links:
    - https://bitbucket.org/xerial/sqlite-jdbc/overview  (mature JDBC driver)
    - https://github.com/sqlitebrowser/sqlitebrowser  (SQLite database client)
- Import feature for devices connected via USB
  - New Tab in Options dialog with these settings:
    - Device directory/drive
    - Import directory
    - Default sport type / subtype
    - Default equipment (optional)
- View Track in Google Maps (browser)
  => create local temporary file, see example
- Map tab in Exercise Viewer:
  - improve icons for start/end/lap points
  - slider for progress which shows position and details
- Overview dialog: new display mode for comparing 2 seasons / years:
  (https://sourceforge.net/projects/sportstracker/forums/forum/451565/topic/4435642)
  - add a new diagram option in the selection combobox called "Compare two seasons"
  - in this mode the user gets following input fields:
    - year 1 (default: current year) 
    - year 2 (default: previous year)
    - season start month (default: January) 
  - it must display all the monthly data of year 1 on the left (line graph) and
    year 2 on the right vertical axis (dashed graph)
- Exercise Dialog (and all others): use formated text fields for entering
  distance, duration etc. (will be possible with Java 8u40)
- translation updates (german, french and spanish are up to date)
- Batch import for multiple exercise files (e.g. when migrating from Windows
  Polar software): In the Import dialog the user needs to select the the sport 
  type, the subtype, the intensity and which value from distance, AVG speed or 
  duration needs to be recalculated (because these 3 values in the exercise 
  files does not fit together in most cases) first. Then all selected files 
  will be imported as exercises into SportsTracker. 
- FilterDialog should also make possible to show e.g. all bicycle
  sport subtypes, except those from "ergometer" (hint from Steffen Rehn)

Calendar view/widget:
- horizontal or vertical animation for scrolling through the months

Training route/lap support:
- requested by Bernd Mirbach and other users, see mail from Bernd:
- we need a dialog for editing possible routes/laps and the appropriate
  length, ascent and description
- the user can select a predefined route in the exercise dialog and
  the appropriate widgets will be pre-filled
- it should be possible to filter for specific routes for evaluation


ExerciseViewer-TODO
===================

Diagram panel:
- there's no space at the left side when the bottom axis displays "by distance"
  (between left axis and graph start)

Track panel:
- improve rendering for waypoints, use marker pins instead of circles
  (can the WaypointRenderer from SwingX be reused and enhanced?)

ExerciseParsers:
- GarminTcxParser:
  - refactor big method parseExercisePath(...), split into multiple methods
  - parse speed data for Trackpoints if available instead of calculation 
    (available when there's a speed sensor, e.g. on Edge 500 export files) 
  - average speed is wrong when there are pauses in the exercise (Auto-Stop)
- PolarHsrRawParser and PolarSRawParser:
  - Refactor: Extract duplicate methods/code
- HAC4 Parser:
  - more exercise data checks for parser in unit tests
- HRM Parser: 
  - recalculate average heartrate, speed, times within ranges ... from samples,
    there are often wrong values in the appropriate HRM fields (hint from 
    Steffen Rehn) - (Polar Windows software seems to recalculate this too :-)
  - When the monitor displays heartrate and ranges in percent instead in bpm
    the heartrate limit ranges in the HRM files are also stored in percent. 
    But it's not possible yet to determine whether it's bpm (default) or 
    percent. That's why the parses always assumes bpm values.
    (Calculate the BPM values with help of max. heartrate should work ...)  
