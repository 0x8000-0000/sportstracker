SportsTracker-TODO
==================

JavaFX Migration:
- SportsTracker main window:
  - FXML:
    - menu + toolbar: completed (tested on Windows and Mac)
    - view area: missing
    - status bar: completed, test with long messages
    - add special support for Mac menu items (Preferences, About, ...)
  - Controller: TODO
    - add concept of actions which bundle menu items, toolbar buttons, context menu items?
      (see http://fxexperience.com/controlsfx/features/#actions, othwise bind disabled-property of same menu items)
- CSS: can SportsTracker.css and ExerciseViewer.css be merged into one file?
  (does the relative import in FXML work?)
- SportsTracker and ExerciseViewer: store and restore window sizes, not for dialogs (positions too?)
- JFreeChart usage (in Overview Dialog): migration completed and tested, except:
  - the JavaFX version of JFreeChart logs CSS warnings at initial chart display, but works properly
    (problem does not exist in ExerciseViewer)
    => probably a JavaFX bug which will be fixed in 8u40 ( https://javafx-jira.kenai.com/browse/RT-38640 )
  - artifact is not available in the Maven Central repo, using custom build from saring.de repository meanwhile
    -> I've posted a request to the JFree forum: http://www.jfree.org/forum/viewtopic.php?f=3&t=117112
  - installation of custom build in local repository:
    mvn install:install-file -Dfile=jfreechart-1.0.19.jar -DgroupId=org.jfree
      -DartifactId=jfreechart-fx -Dversion=1.0.19 -Dpackaging=jar
- ExerciseViewer: Done & tested
  - Bug: when EV is opened from Calendar and a new Exercise Dialog is opened, the EV will be closed
    => reason: Swing/JavaFX workarounds in AbstractDialogController#centerDialogOnSwingFrame()
    => problem is solved when main ST window has been migrated to JavaFX
  - Bug: EV window is always placed in screen center, not placed at center of parent window
    => problem is solved when main ST window has been migrated to JavaFX
- Usage of openjfx-dialog status:
  - Works ok, but some minor problems:
    - dialog pane font size is too large (at least on Mac OS X)
      - Workaround: dlg.getDialogPane().setStyle("-fx-font-size: 1em;");
      - I've filed a JavaFX bug: https://javafx-jira.kenai.com/browse/RT-38818 => fixed in JavaFX 8u40
        -> remove in AbstractDialogController and STContextImpl when bugfix is available
    - Alert dialogs must not have fullscreen and minimize window buttons
      - I've filed a JavaFX bug: https://javafx-jira.kenai.com/browse/RT-38946
    - Alert dialogs does not show the complete message when longer than 2 lines
      - I've filed a JavaFX bug: https://javafx-jira.kenai.com/browse/RT-38998
- Exercise/Note/Weight tables: use PropertyExtractor concept for displaying data changes,
  see http://www.jensd.de/wordpress/?p=1650
- JavaFX/Swing combination problems on Windows:
  - modality of JavaFX dialog windows works perfectly, better then on Mac OS X
  - the JavaFX dialog is always shown in the center of the screen, not in the
    center of the main Swing window (works on Mac OS X)
    => maybe an ControlsFX bug?
       (see https://bitbucket.org/controlsfx/controlsfx/issue/345/unable-to-change-dialog-position)
  - the Windows taskbar also shows an Icon for the transparent dummy JavaFX
    Stage -> can this be hidden?
- Use Maven JavaFX Plugin 8.1, see details in
  http://speling.shemnon.com//blog/2014/09/12/maven-javafx-plugin-8-dot-1-released/
- SportType: use JavaFX Color object when migration of main ST window completed
- Exercise Viewer: use a JavaFX based map viewer, currently it's the Swing based JXMapKit
- Use Dialogs, Spinner and FormatedTextFields controls in (e.g. in Exercise, Note, Weight dialogs)
  => will be introduced in Java 8u40 (Dec. 2014)
- JavaFX Bug RT-38644: https://javafx-jira.kenai.com/browse/RT-38644 (created)
  - User can't close Dialogs with ESC when the DatePicker has the focus
  -> is planned to be fixed in JavaFX 8u40
- inspect memory usage of SportsTracker after migration (also with multiple opened ExerciseViewers)

JavaFX Migration status - completed:
- All SportsTracker dialogs
  - About Dialog
  - Note Dialog
  - Weight Dialog
  - Exercise Dialog
  - HRM File Open Dialog (from File->Open action it is not modal and is not
    placed in center of ST window, it is fixed when ST main window used JavaFX)
  - Overview Dialog (still using Swing version of JFreeChart, see TODOs)
  - Sport Type List Dialog
  - Sport Type Dialog
  - Filter Dialog
  - Statistic Dialog
  - Statistic Result Dialog
  - Preferences Dialog
- Exercise Viewer sub-application
- Use of openjfx-dialog backport library from JavaFX 8u40

Java 8 migration status:
- full use of Lambdas and the new Java Date API (JSR 310) in all modules
- the Parser implementations of the ExerciseViewer has not been updated for
  using the latest Java 8 features 
  => they are isolated and not the base for further development
- IDE support: works fine in IDEA 13.1, NetBeans 8.0 and Eclipse 4.4

Dependency Injection:
- use Dagger as an alternative to the Guice framework,
  URL: http://square.github.io/dagger/
  -> almost same interface (JSR 330), but DI done on compilation without 
     reflection instead at runtime 
  -> much faster startup performance
  -> see Devoxx 2013 talk about Dagger from Jake Wharton
- Alternative: Guice 4.0

Mac OS X integration:
- Application name is not displayed in the MenuBar, it shows STMain instead
  => Workaround: pass JVM parameter "-Xdock:name=SportsTracker" on startup
  => Known bug, maybe it will be fixed in next JDK release
- SportsTracker.app works properly, the name is set via JVM parameter there

General TODOs:
--------------

- Use JPA for database persistence instead of XML files
  - Derby or SQLite are interesting options, SQLite links:
    - https://bitbucket.org/xerial/sqlite-jdbc/overview  (mature JDBC driver)
    - https://github.com/sqlitebrowser/sqlitebrowser  (SQLite database client)
- Import feature for devices connected via USB
  - New Tab in Options dialog with these settings:
    - Device directory/drive
    - Import directory
    - Default sport type / subtype
    - Default equipment (optional)
- View Track in Google Maps (browser)
  => create local temporary file, see example
- Map tab in Exercise Viewer:
  - improve icons for start/end/lap points
  - slider for progress which shows position and details
- Overview dialog: new display mode for comparing 2 seasons / years:
  (https://sourceforge.net/projects/sportstracker/forums/forum/451565/topic/4435642)
  - add a new diagram option in the selection combobox called "Compare two seasons"
  - in this mode the user gets following input fields:
    - year 1 (default: current year) 
    - year 2 (default: previous year)
    - season start month (default: January) 
  - it must display all the monthly data of year 1 on the left (line graph) and
    year 2 on the right vertical axis (dashed graph)
- Exercise Dialog (and all others): use JFormatedTextField for entering
  distance, duration etc.
- Exercise list view: right mouse click on the column header should open the
  Options Dialog tab for the list view
- translation updates (german, french and spanish are up to date)
- manual starting of Tasks (background) will be simpler in future AFW's,
  improve STController:startActionManually() then
  => https://appframework.dev.java.net/issues/show_bug.cgi?id=39
  => http://kenai.com/jira/browse/BSAF-92 (I've created a new issue in BSAF)
- Batch import for multiple exercise files (e.g. when migrating from Windows 
  Polar software): In the Import dialog the user needs to select the the sport 
  type, the subtype, the intensity and which value from distance, AVG speed or 
  duration needs to be recalculated (because these 3 values in the exercise 
  files does not fit together in most cases) first. Then all selected files 
  will be imported as exercises into SportsTracker. 
- FilterDialog should also make possible to show e.g. all bicycle
  sport subtypes, except those from "ergometer" (hint from Steffen Rehn)

Calendar view/widget:
- horizontal or vertical animation for scrolling through the months
  => create bitmaps of old and new month view and move those (much faster)
  => alternative: fade out and in via alpha channel
- draw small shadows?

Training route/lap support:
- requested by Bernd Mirbach and other users, see mail from Bernd:
- we need a dialog for editing possible routes/laps and the appropriate
  length, ascent and description
- the user can select a predefined route in the exercise dialog and
  the appropriate widgets will be pre-filled
- it should be possible to filter for specific routes for evaluation


ExerciseViewer-TODO
===================

Diagram panel:
- there's no space at the left side when the bottom axis displays "by distance"
  (between left axis and graph start)

Track panel:
- improve rendering for waypoints, use marker pins instead of circles
  (can the WaypointRenderer from SwingX be reused and enhanced?)

ExerciseParsers:
- GarminTcxParser:
  - refactor big method parseExercisePath(...), split into multiple methods
  - parse speed data for Trackpoints if available instead of calculation 
    (available when there's a speed sensor, e.g. on Edge 500 export files) 
  - average speed is wrong when there are pauses in the exercise (Auto-Stop)
- PolarHsrRawParser and PolarSRawParser:
  - Refactor: Extract duplicate methods/code
- HAC4 Parser:
  - more exercise data checks for parser in unit tests
- HRM Parser: 
  - recalculate average heartrate, speed, times within ranges ... from samples,
    there are often wrong values in the appropriate HRM fields (hint from 
    Steffen Rehn) - (Polar Windows software seems to recalculate this too :-)
  - When the monitor displays heartrate and ranges in percent instead in bpm
    the heartrate limit ranges in the HRM files are also stored in percent. 
    But it's not possible yet to determine whether it's bpm (default) or 
    percent. That's why the parses always assumes bpm values.
    (Calculate the BPM values with help of max. heartrate should work ...)  
